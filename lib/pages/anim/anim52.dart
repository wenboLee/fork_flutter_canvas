import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:path_parsing/path_parsing.dart';

class Anim52Page extends StatefulWidget {
  Anim52Page({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _Anim52PageState createState() => _Anim52PageState();
}

class _Anim52PageState extends State<Anim52Page>
    with SingleTickerProviderStateMixin {
  AnimationController _animationController;
  bool _isSort = true;
  List<List<String>> _pathsData = [
    [
      'M759.466667 1024H264.533333C119.466667 1024 0 904.533333 0 759.466667V261.688889C0 116.622222 119.466667 0 264.533333 0h494.933334C904.533333 0 1024 116.622222 1024 261.688889v497.777778c0 145.066667-119.466667 264.533333-264.533333 264.533333zM264.533333 54.044444c-116.622222 0-210.488889 93.866667-210.488889 210.488889v497.777778c0 116.622222 93.866667 210.488889 210.488889 210.488889h494.933334c116.622222 0 210.488889-93.866667 210.488889-210.488889V261.688889c0-116.622222-93.866667-210.488889-210.488889-210.488889H264.533333z',
      'M355.555556 290.133333m-128 0a128 128 0 1 0 256 0 128 128 0 1 0-256 0Z',
      'M355.555556 489.244444c-108.088889 0-199.111111-88.177778-199.111112-199.111111s88.177778-199.111111 199.111112-199.111111 199.111111 88.177778 199.111111 199.111111-88.177778 199.111111-199.111111 199.111111z m0-369.777777c-93.866667 0-170.666667 76.8-170.666667 170.666666s76.8 170.666667 170.666667 170.666667 170.666667-76.8 170.666666-170.666667-76.8-170.666667-170.666666-170.666666z',
      'M355.555556 733.866667m-128 0a128 128 0 1 0 256 0 128 128 0 1 0-256 0Z',
      'M355.555556 932.977778c-108.088889 0-199.111111-88.177778-199.111112-199.111111s88.177778-199.111111 199.111112-199.111111 199.111111 88.177778 199.111111 199.111111-88.177778 199.111111-199.111111 199.111111z m0-369.777778c-93.866667 0-170.666667 76.8-170.666667 170.666667s76.8 170.666667 170.666667 170.666666 170.666667-76.8 170.666666-170.666666-76.8-170.666667-170.666666-170.666667zM779.377778 733.866667c-71.111111 0-128-56.888889-128-128s56.888889-128 128-128 128 56.888889 128 128c2.844444 71.111111-56.888889 128-128 128z m0-230.4c-56.888889 0-102.4 45.511111-102.4 102.4s45.511111 102.4 102.4 102.4 102.4-45.511111 102.4-102.4-45.511111-102.4-102.4-102.4z',
      'M779.377778 352.711111m-45.511111 0a45.511111 45.511111 0 1 0 91.022222 0 45.511111 45.511111 0 1 0-91.022222 0Z',
    ],
    [
      'M702.586 74.472h117.43c70.852 0 128.287 56.07 128.287 125.226V322.03c0 13.824 11.49 25.039 25.661 25.039 14.166 0 25.655-11.215 25.655-25.045V199.698c0-96.823-80.408-175.317-179.602-175.317H702.586c-14.172 0-25.661 11.215-25.661 25.051 0 13.824 11.49 25.04 25.66 25.04z m245.498 628.114v117.43c0 70.852-57.686 128.287-128.835 128.287H702.696c-14.227 0-25.765 11.49-25.765 25.661 0 14.166 11.538 25.655 25.765 25.655h116.553c99.608 0 180.37-80.408 180.37-179.602V702.586c0-14.172-11.538-25.661-25.765-25.661-14.232 0-25.77 11.49-25.77 25.66zM321.524 948.15H203.209c-70.546 0-127.732-57.606-127.732-128.67V702.664c0-14.214-11.44-25.734-25.55-25.734-14.105 0-25.546 11.52-25.546 25.734V819.48c0 99.487 80.067 180.139 178.828 180.139h118.309c14.116 0 25.551-11.52 25.551-25.734 0-14.214-11.435-25.734-25.545-25.734zM75.61 321.688c0 14.02-11.465 25.381-25.612 25.381-14.147 0-25.618-11.362-25.618-25.38v-119.65c0-98.127 80.28-177.658 179.31-177.658h117.76c14.153 0 25.618 11.361 25.618 25.38s-11.465 25.375-25.612 25.375h-117.76c-70.742 0-128.086 56.814-128.086 126.903v119.65z m594.146 62.342c0-16.457 14.446-29.787 32.268-29.787 17.823 0 32.274 13.336 32.274 29.787v69.498c0 16.458-14.445 29.788-32.274 29.788-17.816 0-32.268-13.337-32.268-29.788V384.03z m-380.056 0c0-16.457 14.445-29.787 32.274-29.787 17.816 0 32.268 13.336 32.268 29.787v69.498c0 16.458-14.446 29.788-32.268 29.788-17.823 0-32.274-13.337-32.274-29.788V384.03z m182.308 189.367c19.03 0 25.393-6.21 26.746-29.427V384.494c0-16.707 14.202-30.251 31.72-30.251 17.517 0 31.72 13.544 31.72 30.25v160.275l-0.037 1.524c-2.902 54.698-35.578 87.613-90.149 87.613-17.518 0-31.72-13.544-31.72-30.25 0-16.714 14.202-30.258 31.726-30.258zM341.851 727.87a29.379 29.379 0 0 1-0.633-41.935 30.354 30.354 0 0 1 42.508-0.628c32.768 31.378 74.947 47.043 128.274 47.043s95.506-15.665 128.274-47.043a30.354 30.354 0 0 1 42.508 0.628 29.379 29.379 0 0 1-0.633 41.935c-44.404 42.514-101.7 63.793-170.149 63.793-68.45 0-125.745-21.273-170.149-63.793z'
    ],
    [
      'M509.724444 489.244444m-339.057777 0a339.057778 339.057778 0 1 0 678.115555 0 339.057778 339.057778 0 1 0-678.115555 0Z',
      'M951.182222 309.475556c-25.031111-59.164444-59.164444-111.502222-104.675555-157.013334-45.511111-45.511111-97.848889-81.92-157.013334-104.675555-56.888889-22.755556-118.328889-34.133333-179.768889-34.133334C448.284444 11.377778 386.844444 22.755556 329.955556 45.511111c-59.164444 25.031111-111.502222 59.164444-157.013334 104.675556-45.511111 45.511111-79.644444 97.848889-104.675555 157.013333-22.755556 56.888889-34.133333 118.328889-34.133334 179.768889S45.511111 609.848889 68.266667 666.737778c25.031111 59.164444 59.164444 111.502222 104.675555 157.013333 45.511111 45.511111 97.848889 81.92 157.013334 104.675556 56.888889 22.755556 118.328889 34.133333 179.768888 34.133333s122.88-11.377778 179.768889-34.133333c59.164444-25.031111 111.502222-59.164444 157.013334-104.675556 45.511111-45.511111 79.644444-97.848889 104.675555-157.013333 22.755556-56.888889 34.133333-118.328889 34.133334-179.768889 0-59.164444-11.377778-120.604444-34.133334-177.493333zM796.444444 773.688889c-77.368889 77.368889-179.768889 120.604444-286.72 120.604444-106.951111 0-209.351111-43.235556-284.444444-118.328889-75.093333-77.368889-118.328889-177.493333-118.328889-286.72s40.96-209.351111 118.328889-286.72c77.368889-77.368889 177.493333-118.328889 284.444444-118.328888s207.075556 40.96 284.444445 118.328888l2.275555 2.275556c75.093333 77.368889 116.053333 177.493333 116.053334 284.444444S871.537778 698.595556 796.444444 773.688889z',
      'M662.186667 450.56c-20.48 0-38.684444 13.653333-43.235556 31.857778l-11.377778 36.408889-72.817777-207.075556c-11.377778-29.582222-47.786667-34.133333-65.991112-6.826667l-100.124444 159.288889h-79.644444c-18.204444 0-31.857778 13.653333-31.857778 31.857778 0 18.204444 13.653333 31.857778 31.857778 31.857778h86.471111c15.928889 0 34.133333-9.102222 43.235555-22.755556l75.093334-118.328889 81.92 236.657778c11.377778 34.133333 56.888889 34.133333 68.266666-2.275555l31.857778-104.675556h36.408889c18.204444 0 31.857778-13.653333 31.857778-31.857778 0-18.204444-13.653333-31.857778-31.857778-31.857777l-50.062222-2.275556zM926.151111 1001.244444l-77.368889-77.368888c-15.928889-15.928889-15.928889-38.684444 0-54.613334s38.684444-15.928889 54.613334 0l77.368888 77.368889c15.928889 15.928889 15.928889 38.684444 0 54.613333s-40.96 15.928889-54.613333 0z',
    ],
    [
      'M503.04 408.32c17.92 0 30.72-12.8 30.72-30.72 0-17.92-11.52-30.72-30.72-30.72-17.92 0-37.12 11.52-37.12 30.72C465.92 395.52 483.84 408.32 503.04 408.32z',
      'M582.4 524.8c-11.52 0-24.32 12.8-24.32 24.32 0 12.8 12.8 24.32 24.32 24.32 19.2 0 30.72-11.52 30.72-24.32C613.12 537.6 600.32 524.8 582.4 524.8z',
      'M512 0C229.12 0 0 229.12 0 512c0 282.88 229.12 512 512 512s512-229.12 512-512C1024 229.12 794.88 0 512 0zM410.88 659.2c-30.72 0-55.04-6.4-85.76-12.8l-85.76 42.24 24.32-72.96c-61.44-42.24-97.28-98.56-97.28-165.12C166.4 335.36 276.48 243.2 410.88 243.2c120.32 0 225.28 72.96 247.04 171.52-7.68-1.28-15.36-1.28-23.04-1.28-116.48 0-207.36 87.04-207.36 193.28 0 17.92 2.56 34.56 7.68 51.2C426.24 659.2 418.56 659.2 410.88 659.2zM771.84 744.96l17.92 61.44-66.56-37.12c-24.32 6.4-48.64 12.8-72.96 12.8-116.48 0-208.64-79.36-208.64-177.92 0-97.28 92.16-177.92 208.64-177.92 110.08 0 207.36 79.36 207.36 177.92C857.6 659.2 820.48 707.84 771.84 744.96z',
      'M716.8 524.8c-11.52 0-24.32 12.8-24.32 24.32 0 12.8 12.8 24.32 24.32 24.32 17.92 0 30.72-11.52 30.72-24.32C747.52 537.6 734.72 524.8 716.8 524.8z',
      'M331.52 346.88c-17.92 0-37.12 11.52-37.12 30.72 0 17.92 17.92 30.72 37.12 30.72 17.92 0 30.72-12.8 30.72-30.72C362.24 359.68 349.44 346.88 331.52 346.88z',
    ],
    [
      'M173.511111 578.844444l-2.844444-11.377777c-2.844444-14.222222-4.266667-28.444444-4.266667-44.088889 0-7.111111-7.111111-12.8-12.8-12.8-7.111111 0-12.8 7.111111-12.8 12.8 1.422222 19.911111 2.844444 39.822222 7.111111 59.733333l1.422222 7.111111c8.533333 58.311111-12.8 116.622222-58.311111 155.022222-7.111111 4.266667-7.111111 12.8-2.844444 18.488889 2.844444 2.844444 7.111111 4.266667 9.955555 4.266667 2.844444 0 5.688889-1.422222 8.533334-2.844444 55.466667-44.088889 79.644444-116.622222 66.844444-186.311112z m0 0',
      'M231.822222 566.044444l-2.844444-11.377777c-17.066667-103.822222 22.755556-206.222222 103.822222-271.644445 5.688889-4.266667 7.111111-12.8 2.844444-18.488889s-12.8-7.111111-18.488888-2.844444c-92.444444 73.955556-135.111111 193.422222-110.933334 310.044444l2.844445 9.955556c12.8 81.066667-18.488889 163.555556-83.911111 216.177778-5.688889 4.266667-7.111111 12.8-2.844445 18.488889 2.844444 2.844444 7.111111 4.266667 9.955556 4.266666 2.844444 0 5.688889-1.422222 7.111111-2.844444 76.8-59.733333 112.355556-156.444444 92.444444-251.733334z m44.088889 166.4c2.844444-7.111111-1.422222-14.222222-7.111111-17.066666-7.111111-2.844444-14.222222 1.422222-17.066667 7.111111-18.488889 46.933333-48.355556 89.6-88.177777 119.466667-5.688889 4.266667-7.111111 12.8-2.844445 18.488888 2.844444 2.844444 7.111111 4.266667 9.955556 4.266667 2.844444 0 5.688889-1.422222 7.111111-2.844444 46.933333-32.711111 78.222222-78.222222 98.133333-129.422223z m374.044445-250.311111c-7.111111-35.555556-28.444444-65.422222-58.311112-85.333333-29.866667-19.911111-65.422222-27.022222-100.977777-19.911111-54.044444 11.377778-93.866667 52.622222-105.244445 103.822222-1.422222 7.111111 2.844444 14.222222 9.955556 15.644445 7.111111 1.422222 14.222222-2.844444 15.644444-9.955556 8.533333-42.666667 42.666667-75.377778 85.333334-83.911111 28.444444-5.688889 58.311111 0 82.488888 15.644444 22.755556 15.644444 38.4 38.4 45.511112 64l1.422222 5.688889c8.533333 42.666667 12.8 85.333333 12.8 129.422222 0 7.111111 5.688889 12.8 12.8 12.8s12.8-5.688889 12.8-12.8c0-41.244444-4.266667-82.488889-11.377778-123.733333l-2.844444-11.377778z m0 0',
      'M352.711111 541.866667l-2.844444-11.377778c-5.688889-41.244444 2.844444-82.488889 27.022222-116.622222 25.6-38.4 64-64 108.088889-72.533334 15.644444-2.844444 31.288889-4.266667 46.933333-2.844444 7.111111 1.422222 12.8-4.266667 14.222222-12.8 1.422222-7.111111-4.266667-12.8-12.8-14.222222-18.488889-1.422222-36.977778 0-54.044444 2.844444-51.2 11.377778-95.288889 41.244444-125.155556 83.911111-28.444444 42.666667-38.4 95.288889-28.444444 146.488889l2.844444 12.8c9.955556 58.311111 4.266667 118.044444-15.644444 173.511111-19.911111 58.311111-55.466667 109.511111-102.4 149.333334-5.688889 4.266667-5.688889 12.8-1.422222 18.488888 2.844444 2.844444 7.111111 4.266667 9.955555 4.266667 2.844444 0 5.688889-1.422222 8.533334-2.844444 49.777778-42.666667 88.177778-99.555556 109.511111-160.711111 22.755556-61.155556 28.444444-129.422222 15.644444-197.688889zM123.733333 234.666667c4.266667 0 7.111111-2.844444 11.377778-5.688889 69.688889-95.288889 172.088889-160.711111 288.711111-184.888889 103.822222-21.333333 207.644444-7.111111 302.933334 38.4 7.111111 2.844444 14.222222 0 18.488888-5.688889 2.844444-7.111111 0-14.222222-5.688888-18.488889C640 9.955556 529.066667-5.688889 420.977778 17.066667 295.822222 42.666667 187.733333 113.777778 113.777778 214.755556c-4.266667 5.688889-2.844444 14.222222 2.844444 18.488888 2.844444 1.422222 5.688889 1.422222 7.111111 1.422223zM455.111111 197.688889c-24.177778 4.266667-48.355556 12.8-69.688889 22.755555-7.111111 2.844444-9.955556 11.377778-7.111111 18.488889 2.844444 7.111111 11.377778 9.955556 17.066667 7.111111 19.911111-8.533333 42.666667-17.066667 64-21.333333 85.333333-17.066667 174.933333 4.266667 241.777778 59.733333 2.844444 2.844444 5.688889 2.844444 7.111111 2.844445 2.844444 0 7.111111-1.422222 9.955555-4.266667 4.266667-5.688889 2.844444-14.222222-2.844444-18.488889-71.111111-61.155556-166.4-85.333333-260.266667-66.844444z m0 0',
      'M416.711111 558.933333c-1.422222-7.111111-7.111111-12.8-14.222222-11.377777-7.111111 1.422222-12.8 7.111111-11.377778 14.222222 17.066667 132.266667-31.288889 265.955556-129.422222 358.4-5.688889 4.266667-5.688889 12.8 0 18.488889 2.844444 2.844444 5.688889 4.266667 9.955555 4.266666 2.844444 0 7.111111-1.422222 8.533334-2.844444 103.822222-99.555556 155.022222-241.777778 136.533333-381.155556zM58.311111 622.933333c-2.844444-7.111111-2.844444-12.8-4.266667-19.911111 0-1.422222 0-2.844444-1.422222-2.844444-9.955556-51.2-12.8-105.244444-4.266666-157.866667 7.111111-51.2 22.755556-100.977778 45.511111-147.911111 4.266667-7.111111 2.844444-15.644444-4.266667-18.488889-7.111111-2.844444-14.222222-1.422222-17.066667 5.688889-24.177778 49.777778-41.244444 102.4-48.355555 156.444444-7.111111 56.888889-7.111111 113.777778 4.266666 170.666667 0 1.422222 0 2.844444 1.422223 2.844445 1.422222 7.111111 2.844444 12.8 4.266666 18.488888 1.422222 5.688889 7.111111 9.955556 12.8 9.955556h2.844445c5.688889-2.844444 9.955556-9.955556 8.533333-17.066667z m0 0',
      'M113.777778 591.644444l-1.422222-8.533333c-18.488889-105.244444 1.422222-213.333333 62.577777-301.511111 61.155556-92.444444 155.022222-155.022222 261.688889-176.355556 45.511111-8.533333 91.022222-11.377778 136.533334-4.266666 7.111111 1.422222 12.8-4.266667 14.222222-11.377778 1.422222-7.111111-4.266667-12.8-11.377778-14.222222-48.355556-7.111111-98.133333-4.266667-145.066667 4.266666-113.777778 22.755556-214.755556 89.6-278.755555 187.733334C88.177778 365.511111 64 482.133333 88.177778 597.333333l1.422222 4.266667c5.688889 32.711111-5.688889 66.844444-28.444444 91.022222-4.266667 5.688889-4.266667 12.8 1.422222 18.488889 2.844444 2.844444 5.688889 2.844444 8.533333 2.844445 2.844444 0 7.111111-1.422222 9.955556-4.266667 28.444444-32.711111 41.244444-76.8 32.711111-118.044445z m0 0',
      'M861.866667 439.466667l1.422222 7.111111 7.111111 39.822222c1.422222 7.111111 7.111111 11.377778 12.8 11.377778h2.844444c7.111111-1.422222 12.8-7.111111 11.377778-14.222222-2.844444-17.066667-5.688889-32.711111-8.533333-48.355556l-2.844445-9.955556c-21.333333-95.288889-78.222222-176.355556-159.288888-231.822222-83.911111-55.466667-184.888889-75.377778-284.444445-55.466666-76.8 15.644444-145.066667 54.044444-197.688889 109.511111-52.622222 54.044444-86.755556 123.733333-99.555555 196.266666-1.422222 7.111111 2.844444 14.222222 11.377777 15.644445 7.111111 1.422222 14.222222-2.844444 15.644445-11.377778 12.8-68.266667 44.088889-132.266667 92.444444-183.466667 49.777778-52.622222 113.777778-86.755556 184.888889-100.977777 92.444444-18.488889 184.888889 0 264.533334 52.622222 76.8 51.2 130.844444 130.844444 147.911111 223.288889z m0 0',
      'M945.777778 409.6C910.222222 260.266667 799.288889 137.955556 651.377778 91.022222c-7.111111-2.844444-14.222222 1.422222-17.066667 8.533334-2.844444 7.111111 1.422222 14.222222 8.533333 17.066666 142.222222 45.511111 248.888889 164.977778 278.755556 312.888889l2.844444 8.533333c18.488889 99.555556 22.755556 200.533333 9.955556 300.088889-1.422222 7.111111 4.266667 12.8 11.377778 14.222223h1.422222c7.111111 0 12.8-4.266667 12.8-11.377778 12.8-105.244444 8.533333-211.911111-12.8-317.155556l-1.422222-14.222222z m0 0',
      'M827.733333 440.888889c-9.955556-42.666667-28.444444-83.911111-54.044444-119.466667-4.266667-5.688889-12.8-7.111111-18.488889-2.844444s-7.111111 12.8-2.844444 18.488889c24.177778 34.133333 41.244444 72.533333 49.777777 113.777777l1.422223 2.844445c31.288889 155.022222 17.066667 314.311111-38.4 462.222222-2.844444 7.111111 1.422222 14.222222 7.111111 17.066667 1.422222 1.422222 2.844444 1.422222 4.266666 1.422222 5.688889 0 9.955556-2.844444 12.8-8.533333 58.311111-153.6 72.533333-318.577778 39.822223-480.711111l-1.422223-4.266667z m0 0',
      'M775.111111 748.088889c15.644444-93.866667 14.222222-189.155556-4.266667-283.022222l-1.422222-7.111111c-12.8-68.266667-52.622222-125.155556-109.511111-163.555556-56.888889-38.4-125.155556-51.2-192-38.4-66.844444 12.8-125.155556 52.622222-163.555555 109.511111-38.4 56.888889-51.2 125.155556-38.4 193.422222l2.844444 12.8c4.266667 25.6 4.266667 51.2 2.844444 75.377778-1.422222 7.111111 4.266667 12.8 11.377778 14.222222 7.111111 1.422222 12.8-4.266667 14.222222-11.377777 2.844444-32.711111 2.844444-64-4.266666-96.711112l-2.844445-11.377777c-8.533333-56.888889 4.266667-113.777778 35.555556-160.711111 34.133333-51.2 85.333333-86.755556 146.488889-99.555556 59.733333-12.8 122.311111 0 173.511111 34.133333 49.777778 32.711111 83.911111 83.911111 98.133333 143.644445l1.422222 2.844444c18.488889 93.866667 19.911111 187.733333 5.688889 280.177778-1.422222 7.111111 2.844444 14.222222 11.377778 15.644444h2.844445c2.844444 0 8.533333-4.266667 9.955555-9.955555z m-25.6 61.155555c-7.111111-2.844444-14.222222 2.844444-15.644444 8.533334-12.8 48.355556-29.866667 93.866667-52.622223 139.377778-2.844444 7.111111 0 14.222222 5.688889 18.488888 2.844444 1.422222 2.844444 1.422222 5.688889 1.422223 4.266667 0 9.955556-2.844444 12.8-7.111111 22.755556-46.933333 41.244444-93.866667 54.044445-145.066667 0-7.111111-4.266667-14.222222-9.955556-15.644445z m258.844445-399.644444c0-1.422222 0-2.844444-1.422223-2.844444C981.333333 281.6 908.8 173.511111 804.977778 99.555556c-5.688889-4.266667-14.222222-2.844444-18.488889 2.844444-4.266667 5.688889-2.844444 14.222222 2.844444 17.066667 99.555556 69.688889 167.822222 174.933333 192 294.4 0 1.422222 0 2.844444 1.422223 2.844444 7.111111 32.711111 9.955556 66.844444 8.533333 100.977778 0 7.111111 5.688889 12.8 12.8 12.8s12.8-5.688889 12.8-12.8c1.422222-35.555556-1.422222-72.533333-8.533333-108.088889z m-116.622223 137.955556c-7.111111 0-12.8 7.111111-12.8 14.222222 5.688889 96.711111-2.844444 193.422222-28.444444 287.288889-2.844444 7.111111 2.844444 14.222222 8.533333 15.644444h2.844445c5.688889 0 11.377778-2.844444 12.8-9.955555 25.6-96.711111 35.555556-196.266667 28.444444-295.822223 1.422222-5.688889-4.266667-11.377778-11.377778-11.377777z m0 0',
      'M591.644444 504.888889l-2.844444-11.377778c-4.266667-19.911111-15.644444-36.977778-32.711111-46.933333-17.066667-11.377778-36.977778-14.222222-55.466667-11.377778-39.822222 7.111111-66.844444 48.355556-58.311111 88.177778l2.844445 12.8c9.955556 59.733333 8.533333 120.888889-2.844445 180.622222-1.422222 7.111111 2.844444 14.222222 9.955556 15.644444 7.111111 1.422222 14.222222-2.844444 15.644444-9.955555 14.222222-66.844444 14.222222-135.111111 1.422222-203.377778V512c-1.422222-22.755556 14.222222-45.511111 38.4-49.777778 12.8-2.844444 25.6 0 35.555556 7.111111 8.533333 7.111111 17.066667 15.644444 18.488889 27.022223l1.422222 4.266666c34.133333 170.666667-7.111111 348.444444-113.777778 484.977778-4.266667 5.688889-2.844444 14.222222 2.844445 18.488889 2.844444 2.844444 5.688889 2.844444 7.111111 2.844444 4.266667 0 7.111111-2.844444 9.955555-5.688889 110.933333-140.8 155.022222-320 122.311111-496.355555z m0 0',
      'M712.533333 480.711111l-2.844444-11.377778c-11.377778-56.888889-46.933333-103.822222-96.711111-132.266666-7.111111-2.844444-14.222222-1.422222-17.066667 5.688889-2.844444 7.111111-1.422222 14.222222 5.688889 18.488888 42.666667 22.755556 71.111111 64 82.488889 109.511112l1.422222 5.688888c34.133333 173.511111 4.266667 352.711111-83.911111 504.888889-4.266667 7.111111-2.844444 14.222222 4.266667 17.066667 2.844444 1.422222 4.266667 2.844444 7.111111 2.844444 4.266667 0 8.533333-2.844444 11.377778-7.111111 88.177778-155.022222 119.466667-337.066667 88.177777-513.422222z m-182.044444 25.6c-1.422222-7.111111-8.533333-12.8-15.644445-9.955555-7.111111 1.422222-12.8 8.533333-9.955555 15.644444 17.066667 83.911111 14.222222 166.4-8.533333 247.466667-21.333333 78.222222-61.155556 149.333333-113.777778 210.488889-4.266667 5.688889-4.266667 12.8 1.422222 18.488888 2.844444 2.844444 5.688889 2.844444 8.533333 2.844445 2.844444 0 7.111111-1.422222 9.955556-4.266667 55.466667-64 98.133333-139.377778 119.466667-220.444444 24.177778-85.333333 25.6-173.511111 8.533333-260.266667z m0 0',
      'M439.466667 782.222222c-7.111111-2.844444-14.222222 1.422222-17.066667 7.111111-22.755556 59.733333-58.311111 113.777778-102.4 159.288889-5.688889 5.688889-4.266667 12.8 0 18.488889 2.844444 2.844444 5.688889 2.844444 8.533333 2.844445 2.844444 0 7.111111-1.422222 8.533334-4.266667 48.355556-48.355556 83.911111-105.244444 109.511111-167.822222 2.844444-5.688889 0-14.222222-7.111111-15.644445z m207.644444-102.4c-7.111111-1.422222-12.8 4.266667-14.222222 11.377778-11.377778 105.244444-49.777778 207.644444-110.933333 295.822222-4.266667 5.688889-2.844444 14.222222 2.844444 17.066667 2.844444 1.422222 4.266667 2.844444 7.111111 2.844444 4.266667 0 7.111111-2.844444 11.377778-5.688889 64-92.444444 102.4-199.111111 115.2-307.2 1.422222-7.111111-4.266667-12.8-11.377778-14.222222z m0 0'
    ],
    [
      'M230.4 576.512c-12.288 9.728-25.088 24.064-28.672 41.984-5.12 24.576-1.024 55.296 22.528 79.872 28.672 29.184 72.704 37.376 91.648 38.912 51.2 3.584 105.984-22.016 147.456-50.688 16.384-11.264 44.032-34.304 70.144-69.632-59.392-30.72-133.632-64.512-212.48-61.44-40.448 1.536-69.632 9.728-90.624 20.992z m752.64 135.68C1009.152 650.752 1024 583.168 1024 512 1024 229.888 794.112 0 512 0S0 229.888 0 512s229.888 512 512 512c170.496 0 321.536-83.968 414.72-211.968-88.064-43.52-232.96-115.712-322.56-159.232-42.496 48.64-105.472 97.28-176.64 118.272-44.544 13.312-84.992 18.432-126.976 9.728-41.984-8.704-72.704-28.16-90.624-47.616-9.216-10.24-19.456-22.528-27.136-37.888 0.512 2.048 1.024 3.072 1.024 3.072s-4.608-7.68-7.68-19.456c-1.536-5.632-3.072-11.776-3.584-17.92-0.512-4.096-0.512-8.704 0-12.8-0.512-7.68 0-15.872 1.536-24.064 4.096-20.48 12.8-44.032 35.328-65.536 49.152-48.128 114.688-50.688 148.992-50.176 50.176 0.512 138.24 22.528 211.968 48.64 20.48-43.52 33.792-90.112 41.984-121.344h-307.2v-33.28h157.696v-66.56H272.384V302.08h190.464v-66.56c0-9.216 2.048-16.384 16.384-16.384h74.752v82.944h207.36v33.28h-207.36v66.56h165.888s-16.896 92.672-68.608 184.32c115.2 40.96 278.016 104.448 331.776 125.952z',
    ]
  ];

  @override
  void initState() {
    _animationController =
        AnimationController(duration: Duration(seconds: 5), vsync: this);
    _animationController.addStatusListener((status) {
      if (status == AnimationStatus.completed) {
        Future.delayed(Duration(seconds: 2), () {
          _isSort = !_isSort;
          _animationController.forward(from: 0);
        });
      }
    });
    _animationController.forward();
    super.initState();
  }

  @override
  void dispose() {
    _animationController?.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: GridView.builder(
          padding: EdgeInsets.all(10),
          gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            childAspectRatio: 1.0,
            mainAxisSpacing: 10,
            crossAxisSpacing: 10,
          ),
          itemCount: _pathsData.length,
          itemBuilder: (context, index) {
            final pathData = _pathsData[index];
            return AnimatedBuilder(
              animation: _animationController,
              builder: (context, child) {
                return CustomPaint(
                  size: Size.infinite,
                  painter: MyPainter(
                    animationController: _animationController,
                    pathData: pathData,
                    isSort: _isSort,
                  ),
                );
              },
            );
          }),
    );
  }
}

class MyPainter extends CustomPainter {
  final AnimationController animationController;
  final bool isSort;
  final List<String> pathData;

  MyPainter({this.animationController, this.isSort, this.pathData});

  @override
  void paint(Canvas canvas, Size size) {
    canvas.save();

    canvas.scale(size.width / 1024, size.width / 1024);
    if (animationController.value == 1.0) {
      _drawPath(pathData, canvas);
    } else {
      _drawPath2(pathData, canvas);
    }

    canvas.restore();
  }

  void _drawPath(List<String> pathsData, Canvas canvas) {
    List.generate(pathsData.length, (index) {
      String pathData = pathsData[index];
      Path path = Path();
      Paint paint = Paint();
      paint.color = Colors.primaries[index];
      writeSvgPathDataToPath(pathData, PathPrinter(path: path));
      canvas.drawPath(path, paint);
    });
  }

  void _drawPath2(List<String> pathsData, Canvas canvas) {
    List<PathMetric> extractPathList = [];
    Function func = (Path path, Paint paint) {
      canvas.drawPath(path, paint);
    };

    List.generate(pathsData.length, (index) {
      String pathData = pathsData[index];
      Path path = Path();
      writeSvgPathDataToPath(pathData, PathPrinter(path: path));
      List<PathMetric> pathMetrics = path.computeMetrics().toList();
      extractPathList.addAll(pathMetrics);
    });
    if (isSort) {
      extractPathList.sort((a, b) => a.length.compareTo(b.length));
    } else {
      extractPathList.sort((a, b) => b.length.compareTo(a.length));
    }
    final extractPathLen = extractPathList.length;
    List.generate(extractPathLen, (index) async {
      PathMetric item = extractPathList[index];
      var begin = index / extractPathLen;
      var end = (index + 1) / extractPathLen;
      Animation<double> animation = Tween<double>(begin: 0, end: 1.0).animate(
          CurvedAnimation(
              parent: animationController,
              curve: Interval(begin, end, curve: Curves.ease)));
      Paint paint = Paint();
      paint.strokeWidth = 10;
      paint.strokeCap = StrokeCap.round;
      paint.style = PaintingStyle.stroke;
      if (animation.value > 0) {
        Path extractPath = item.extractPath(0, item.length * animation.value);
        paint.color = Colors.primaries[index % Colors.primaries.length];
        func(extractPath, paint);
      }
    });
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return oldDelegate != this;
  }
}

class PathPrinter extends PathProxy {
  final Path path;

  PathPrinter({this.path});

  @override
  void close() {
    path.close();
  }

  @override
  void cubicTo(
      double x1, double y1, double x2, double y2, double x3, double y3) {
    path.cubicTo(x1, y1, x2, y2, x3, y3);
  }

  @override
  void lineTo(double x, double y) {
    path.lineTo(x, y);
  }

  @override
  void moveTo(double x, double y) {
    path.moveTo(x, y);
  }
}
